# Name of the GitHub Action workflow
name: FOSSA License Compliance and Security Check

# Event triggers for the workflow
on:
  workflow_dispatch:  # Run this action manually from the GitHub Actions tab

# Define the jobs in the workflow
jobs:
  fossa-scan:
    # Specifies the type of runner to use
    runs-on: ubuntu-latest
    # Sequence of steps that make up a single job
    steps:
    # Checkout the code to the GitHub runner
    - name: Checkout Code
      uses: actions/checkout@v4

    # Run FOSSA Scan
    - name: Run FOSSA Scan
      uses: fossas/fossa-action@main
      with:
        api-key: ${{ secrets.FOSSA_API_KEY }}  # Set this secret in your GitHub repo settings

    # Run FOSSA Tests
    - name: Run FOSSA Tests
      uses: fossas/fossa-action@main
      with:
        api-key: ${{ secrets.FOSSA_API_KEY }}  # Set this secret in your GitHub repo settings
        run-tests: true  # Run FOSSA tests for policy checks

    - name: Get latest draft release tag from OSS repository
      if: always()
      id: get_tag
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const response = await github.rest.repos.getLatestRelease({
            owner: 'liquibase',
            repo: 'liquibase',
          });
          const tag_name = response.data.tag_name;
          console.log(tag_name);
          core.setOutput("tag_name", tag_name.startsWith('v') ? tag_name.substring(1) : tag_name);
          core.setOutput("release_date", response.data.created_at.substr(0, 10));  // Extract only the date part

    - name: Generate FOSSA HTML Report
      id: generate_report
      if: always()
      env:
        FOSSA_API_KEY: ${{ secrets.FOSSA_API_KEY }}
      run: |
        report_filename="liquibase-${{ steps.get_tag.outputs.tag_name }}-${{ steps.get_tag.outputs.release_date }}.html"
        fossa report attribution --format html > $report_filename
        echo "FOSSA report generated: $report_filename"
        echo "::set-output name=report_filename::$report_filename"

    - name: Upload FOSSA HTML Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: "${{ steps.generate_report.outputs.report_filename }}"
        path: .

